
<%= link_to :back, class: "pull-right btn btn-warning mg5" do %>
    <span class="glyphicon glyphicon-flag"></span>
<% end %>


<div class="jumbotron">
    <h2>Welcome to RUNNING CORP</h2>
    <h3>TaxiPe Featuring presentation</h3>
    <h4>by achamo/apolar</h4>
    <img src="https://cloud.githubusercontent.com/assets/16651024/12794223/0dd59d78-ca82-11e5-8ce7-a2d219b75042.gif" />
</div>

   <div class="container">



    <img src="https://cloud.githubusercontent.com/assets/16651024/12868692/a82b6e4e-ccd9-11e5-97a0-78e095adb0d4.png" 
         class="pull-left" style="width:auto;height:140px;" />
    <div class="pull-left pd5">
        <h3 class="text-primary">Distancias</h3>
        <h4 class="">TaxiPe estimaci√≥n de distancia de recorrido entre dos puntos</h4>
        <h5 class="">by achamo</h5>
        
    </div>


    <img src="https://cloud.githubusercontent.com/assets/16651024/12794223/0dd59d78-ca82-11e5-8ce7-a2d219b75042.gif" 
         class="pull-left" style="width:auto;height:140px;" />
    
   <br class="cb">  
   <span class="label label-danger" id="re1">resulta1</span>
   <br class="cb">  
   <span class="label label-success" id="re2">resulta2</span>
   <br class="cb">  
   <span class="label label-primary" id="re3">resulta3</span>
   
        <div id="geolocation"></div>
  
     
      
  
   </div>
</div>

<script>
/* Haversine Algorithm */
var _eQuatorialEarthRadius = 6378.1370;
var _d2r = (Math.PI / 180.0);

function HaversineInM(lat1, long1, lat2, long2)
{
    return (1000.0 * HaversineInKM(lat1, long1, lat2, long2));
}

function HaversineInKM(lat1, long1, lat2, long2)
{
    var dlong = (long2 - long1) * _d2r;
    var dlat = (lat2 - lat1) * _d2r;
    var a = Math.pow(Math.sin(dlat / 2.0), 2.0) + Math.cos(lat1 * _d2r) * Math.cos(lat2 * _d2r) * Math.pow(Math.sin(dlong / 2.0), 2.0);
    var c = 2.0 * Math.atan2(Math.sqrt(a), Math.sqrt(1.0 - a));
    var d = _eQuatorialEarthRadius * c;

    return d;
}

var meLat = -12.091300;
var meLong = -77.077000;


var result1 = HaversineInKM(meLat, meLong, -12.097028, -77.024316);
var result2 = HaversineInKM(meLat, meLong, -11.956457, -76.734915);
var result3 = HaversineInKM(-11.956457, -76.734915, -12.023606551621132, -76.88665313700812);



    result1 = result1.toFixed(2)+'km';
    result2 = result2.toFixed(2)+'km'; 
    result3 = result3.toFixed(2)+'km'; 
    
$('#re1').html('A->PCM: '+result1);
$('#re2').html('A->CH: '+result2);
$('#re3').html('PCM->STACLA: '+result3);

    /*  -------------------   */

    var directionsDisplay = new google.maps.DirectionsRenderer();
    var directionsService = new google.maps.DirectionsService();
    
    function calcRoute() {
    
    // -12.090438, -77.076608
    // -12.097028, -77.024316
    
    
      var origin      = new google.maps.LatLng(-12.091300, -77.077000);
      var destination = new google.maps.LatLng(-12.097028, -77.024316);
      var request = {
          origin:      origin,
          destination: destination,
          travelMode:  google.maps.TravelMode.DRIVING
      };
      directionsService.route(request, function(response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
          directionsDisplay.setDirections(response);
        }
      });
    }
    
    calcRoute();
    
    var handler = Gmaps.build('Google');
    handler.buildMap({ internal: {id: 'geolocation'}}, function(){
      directionsDisplay.setMap(handler.getMap());
    });
            
          
            
    /*  -------------------   */
   
/*   
    var handler = Gmaps.build('Google');
    handler.buildMap({ internal: {id: 'geolocation'} }, function(){
      if(navigator.geolocation)
        navigator.geolocation.getCurrentPosition(displayOnMap);
    });
    
    function displayOnMap(position){
      var marker = handler.addMarker({
        lat: position.coords.latitude,
        lng: position.coords.longitude
      });
      handler.map.centerOn(marker);
    };
*/           
    
</script>
